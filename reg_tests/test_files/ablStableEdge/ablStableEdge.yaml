# -*- mode: yaml -*-

Simulations:
- name: sim1
  time_integrator: ti_1
  optimizer: opt1


# Specify the linear system solvers.
linear_solvers:

  # solver for scalar equations
- name: solve_scalar
  type: tpetra
  method: gmres
  preconditioner: sgs
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0

  # solver for the pressure Poisson equation
- name: solve_cont
  type: tpetra
  method: gmres
  preconditioner: muelu
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0
  recompute_preconditioner: no
  muelu_xml_file_name: ../../xml/milestone.xml


# Specify the different physics realms.  Here, we just have one for the fluid.
realms:

  # The fluid realm that uses the atmospheric LES mesh created above
- name: fluidRealm
  mesh: ../../mesh/abl_5km_5km_1km_neutral.g
  use_edges: yes
  automatic_decomposition_type: rcb

  # This defines the equations to be solved: momentum, pressure, static enthalpy,
  # and subgrid-scale turbulent kinetic energy.  The equation system will be iterated
  # a maximum of 4 outer iterations.
  equation_systems:
    name: theEqSys
    max_iterations: 2

      # This defines which solver to use for each equation set.  See the
      # "linear_solvers" block.  All use the scalar solver, except pressure.
    solver_system_specification:
      velocity: solve_scalar
      pressure: solve_cont
      enthalpy: solve_scalar
      turbulent_ke: solve_scalar

      # This defines the equation systems, maximum number of inner iterations,
      # and scaled nonlinear residual tolerance.
    systems:

    - LowMachEOM:
        name: myLowMach
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    - Enthalpy:
        name: myEnth
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Use this for 1-eqn KSGS
    - TurbKineticEnergy:
        name: myTke
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Specify the properties of the fluid, in this case air.
  material_properties:

    target_name: [fluid_part]

    constant_specification:
      universal_gas_constant: 8314.4621
      reference_pressure: 99895.69611647261  # = rho_ref*(R/mw)*Tref

    reference_quantities:
    - species_name: Air
      mw: 29.0
      mass_fraction: 1.0

    specifications:
      # -- Match reference conditions --
      # Density here was computed such that P_ref = rho_ref*(R/mw)*Tref
    - name: density
      type: constant
      value: 1.3223

      # DOUBLECHECK: viscosity
    - name: viscosity
      type: constant
      value: 1.872e-05

    - name: specific_heat
      type: constant
      value: 1007.0

  # Ignore initial_conditions settings, not used
  initial_conditions:
    - constant: ic_1
      target_name: [fluid_part]
      value:
        pressure: 0.0
        velocity: [10.0, 0.0, 0.0]

    - user_function: ic_2
      target_name: [fluid_part]
      user_function_name:
        velocity: boundary_layer_perturbation
      user_function_parameters:
        velocity: [1.0,0.0075398,0.0075398,50.0,8.0]

    # Boundary conditions are periodic on the north, south, east, and west
    # sides.  The lower boundary condition is a wall that uses an atmospheric
    # rough wall shear stress model.  The upper boundary is a stress free
    # rigid lid applied through symmetry, but the temperature is set to hold
    # a specified boundary normal gradient that matches the stable layer
    # immediately below.
  boundary_conditions:

  - periodic_boundary_condition: bc_north_south
    target_name: [north, south]
    periodic_user_data:
      search_tolerance: 0.0001

  - periodic_boundary_condition: bc_east_west
    target_name: [east, west]
    periodic_user_data:
      search_tolerance: 0.0001

  - abltop_boundary_condition: bc_upper
    target_name: upper
    abltop_user_data:
      normal_temperature_gradient: -0.01

  - wall_boundary_condition: bc_lower
    target_name: lower
    wall_user_data:
      velocity: [0.0,0.0,0.0]
      abl_wall_function:
        surface_heating_table:
          # Surface temperature decreasingly continuously at rate 0.25K/hr
          #   Time     Tflux    T   weight (1=Tflux specified, 2=T specified)
          - [     0.0, 0.000, 265.0, 2.0]
          - [ 36000.0, 0.000, 262.5, 2.0]
          - [ 72000.0, 0.000, 260.0, 2.0]
        reference_temperature: 263.5
        roughness_height: 0.1
        kappa: 0.4
        beta_m: 4.8
        beta_h: 7.8
        gamma_m: 16.0
        gamma_h: 16.0
        gravity_vector_component: 3
        monin_obukhov_averaging_type: planar
        fluctuation_model: Moeng

  solution_options:
    name: myOptions
    turbulence_model: ksgs
    interp_rhou_together_for_mdot: yes

      # Pressure is not fixed anywhere on the boundaries, so set it at
      # the node closest to the specified location.
    fix_pressure_at_node:
      value: 0.0
      node_lookup_type: spatial_location
      location: [100.0, 2500.0, 1.0]
      search_target_part: [fluid_part]
      search_method: stk_kdtree

    options:

    # Model constants for the 1-eq k SGS model.
    # Unchanged from default
    - turbulence_model_constants:
        kappa: 0.40
        cEps: 0.93
        cmuEps: 0.0673
        cmuCs: 0.135   # for Smagorinsky, not used

    - laminar_prandtl:
        enthalpy: 0.7

    - turbulent_prandtl:
        enthalpy: 0.3333

    - turbulent_schmidt:
        turbulent_ke: 0.5

    - source_terms:
        momentum:
        - buoyancy_boussinesq
        - body_force
        - EarthCoriolis
        turbulent_ke:
        - rodi

    - user_constants:
        reference_density: 1.3223
        reference_temperature: 263.5
        gravity: [0.0, 0.0, -9.81]
        east_vector: [1.0, 0.0, 0.0]
        north_vector: [0.0, 1.0, 0.0]
        latitude: 73.0
        earth_angular_velocity: 7.27220521664304e-05

    - limiter:
        pressure: no
        velocity: no
        enthalpy: yes

    - peclet_function_form:
        velocity: tanh
        enthalpy: tanh
        turbulent_ke: tanh

    - peclet_function_tanh_transition:
        velocity: 50000.0
        enthalpy: 2.0
        turbulent_ke: 2.0

    - peclet_function_tanh_width:
        velocity: 200.0
        enthalpy: 1.0
        turbulent_ke: 1.0

    - source_term_parameters:
        ## -- Calculating geostrophic forcing --
        ## DOUBLECHECK calculation
        # rot_time_period   = 86400
        # coriolis_factor f = 2.0*2.0*pi/rot_time_period*sin(73.0/180*pi);
        #                 f = 0.0001390888887002987
        # rho               = 1.3223
        # m_target_vel      = [8, 0, 0]
        # m_g_forcing = [-f*rho*m_target_vel[1], f*rho*m_target_vel[0], 0.0 ]
        momentum: [-0.0, 0.0014713379002272398, 0.0]

    - input_variables_from_file:
        temperature: temperature


  output:
    output_data_base_name: output/abl_gabls.exo
    output_frequency: 1000
    output_node_set: no
    output_variables:
    - velocity
    - pressure
    - enthalpy
    - temperature
    - turbulent_ke

  boundary_layer_statistics:
    target_name: [fluid_part]
    stats_output_file: abl_statistics.nc
    compute_temperature_statistics: yes
    output_frequency: 10000
    time_hist_output_frequency: 1

Time_Integrators:
- StandardTimeIntegrator:
    name: ti_1
    start_time: 0.0
    termination_step_count: 10
    time_step: 0.50
    time_stepping_type: fixed
    time_step_count: 0
    second_order_accuracy: yes

    realms:
    - fluidRealm
